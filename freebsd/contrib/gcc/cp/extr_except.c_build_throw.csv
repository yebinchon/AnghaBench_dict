ADDR_EXPR,VAR_0
BASELINK_FUNCTIONS,FUNC_0
CLASS_TYPE_P,FUNC_1
CLEANUP_POINT_EXPR,VAR_1
COMPOUND_EXPR,VAR_2
INIT_EXPR,VAR_3
LOOKUP_NORMAL,VAR_4
LOOKUP_ONLYCONVERTING,VAR_5
MUST_NOT_THROW_EXPR,VAR_6
NULL_TREE,VAR_7
OVL_CURRENT,FUNC_2
TARGET_EXPR,VAR_8
TARGET_EXPR_SLOT,FUNC_3
THROW_EXPR,VAR_9
TREE_CODE,FUNC_4
TREE_TYPE,FUNC_5
TRY_CATCH_EXPR,VAR_10
TYPE_BINFO,FUNC_6
TYPE_HAS_NONTRIVIAL_DESTRUCTOR,FUNC_7
TYPE_MAIN_VARIANT,FUNC_8
build1,FUNC_9
build2,FUNC_10
build_eh_type_type,FUNC_11
build_function_call,FUNC_12
build_function_type,FUNC_13
build_indirect_ref,FUNC_14
build_int_cst,FUNC_15
build_min,FUNC_16
build_nop,FUNC_17
build_pointer_type,FUNC_18
build_special_member_call,FUNC_19
build_tree_list,FUNC_20
cfun,VAR_11
cleanup_type,VAR_12
complete_ctor_identifier,VAR_13
complete_dtor_identifier,VAR_14
current_function_returns_abnormally,VAR_15
cxx_mark_addressable,FUNC_21
decay_conversion,FUNC_22
decl_is_java_type,FUNC_23
do_allocate_exception,FUNC_24
do_free_exception,FUNC_25
doing_eh,FUNC_26
error,FUNC_27
error_mark_node,VAR_16
get_global_value_if_present,FUNC_28
get_identifier,FUNC_29
get_target_expr,FUNC_30
is_admissible_throw_operand,FUNC_31
is_bitfield_expr_with_lowered_type,FUNC_32
lookup_fnfields,FUNC_33
mark_used,FUNC_34
null_node,VAR_17
prepare_eh_type,FUNC_35
processing_template_decl,VAR_18
ptr_type_node,VAR_19
push_throw_library_fn,FUNC_36
really_overloaded_fn,FUNC_37
stabilize_init,FUNC_38
tree_cons,FUNC_39
type_decays_to,FUNC_40
void_list_node,VAR_20
void_type_node,VAR_21
walk_tree_without_duplicates,FUNC_41
warning,FUNC_42
wrap_cleanups_r,VAR_22
build_throw,FUNC_43
exp,VAR_23
fn,VAR_24
fn,VAR_25
tmp,VAR_26
throw_type,VAR_27
temp_type,VAR_28
cleanup,VAR_29
object,VAR_30
ptr,VAR_31
tmp,VAR_32
temp_expr,VAR_33
allocate_expr,VAR_34
elided,VAR_35
fn,VAR_36
