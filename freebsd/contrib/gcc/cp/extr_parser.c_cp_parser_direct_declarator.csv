BIT_NOT_EXPR,VAR_0
BLOCKDEF,VAR_1
CLASSTYPE_USE_TEMPLATE,FUNC_0
CLASS_TYPE_P,FUNC_1
CPP_CLOSE_PAREN,VAR_2
CPP_CLOSE_SQUARE,VAR_3
CPP_OPEN_PAREN,VAR_4
CPP_OPEN_SQUARE,VAR_5
CP_PARSER_DECLARATOR_BLOCK,VAR_6
CP_PARSER_DECLARATOR_EITHER,VAR_7
CP_PARSER_DECLARATOR_NAMED,VAR_8
DECL_NAME,FUNC_2
IDENTIFIER_NODE,VAR_9
IDENTIFIER_TYPENAME_P,FUNC_3
NULL_TREE,VAR_10
TREE_CODE,FUNC_4
TREE_TYPE,FUNC_5
TYPENAME_TYPE,VAR_11
TYPE_CONTEXT,FUNC_6
TYPE_DECL,VAR_12
TYPE_IDENTIFIER,FUNC_7
TYPE_TI_TEMPLATE,FUNC_8
TYPE_UNQUALIFIED,VAR_13
TYPE_WAS_ANONYMOUS,FUNC_9
at_namespace_scope_p,FUNC_10
cdk_id,VAR_14
constructor_name,FUNC_11
constructor_name_p,FUNC_12
cp_error_declarator,VAR_15
cp_lexer_consume_token,FUNC_13
cp_lexer_peek_token,FUNC_14
cp_parser_constant_expression,FUNC_15
cp_parser_cv_qualifier_seq_opt,FUNC_16
cp_parser_declarator,FUNC_17
cp_parser_declarator_id,FUNC_18
cp_parser_error,FUNC_19
cp_parser_exception_specification_opt,FUNC_20
cp_parser_parameter_declaration_clause,FUNC_21
cp_parser_parse_definitely,FUNC_22
cp_parser_parse_tentatively,FUNC_23
cp_parser_require,FUNC_24
current_class_type,VAR_16
error,FUNC_25
error_mark_node,VAR_17
fold_non_dependent_expr,FUNC_26
get_scope_of_declarator,FUNC_27
inform,FUNC_28
make_array_declarator,FUNC_29
make_call_declarator,FUNC_30
make_id_declarator,FUNC_31
pop_scope,FUNC_32
push_scope,FUNC_33
resolve_typename_type,FUNC_34
same_type_p,FUNC_35
sfk_constructor,VAR_18
sfk_conversion,VAR_19
sfk_destructor,VAR_20
sfk_none,VAR_21
cp_parser_direct_declarator,FUNC_36
parser,VAR_22
dcl_kind,VAR_23
ctor_dtor_or_conv_p,VAR_24
member_p,VAR_25
token,VAR_26
declarator,VAR_27
scope,VAR_28
saved_default_arg_ok_p,VAR_29
saved_in_declarator_p,VAR_30
first,VAR_31
pushed_scope,VAR_32
params,VAR_33
saved_num_template_parameter_lists,VAR_34
cv_quals,VAR_35
exception_specification,VAR_36
saved_in_type_id_in_expr_p,VAR_37
bounds,VAR_38
non_constant_p,VAR_39
qualifying_scope,VAR_40
unqualified_name,VAR_41
sfk,VAR_42
abstract_ok,VAR_43
type,VAR_44
class_type,VAR_45
name_type,VAR_46
