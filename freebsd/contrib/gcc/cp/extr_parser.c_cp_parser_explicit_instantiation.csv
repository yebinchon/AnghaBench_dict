CP_PARSER_DECLARATOR_NAMED,VAR_0
CP_PARSER_FLAGS_OPTIONAL,VAR_1
NORMAL,VAR_2
NULL_TREE,VAR_3
RID_TEMPLATE,VAR_4
begin_explicit_instantiation,FUNC_0
check_tag_decl,FUNC_1
cp_error_declarator,VAR_5
cp_parser_allow_gnu_extensions_p,FUNC_2
cp_parser_check_for_definition_in_return_type,FUNC_3
cp_parser_consume_semicolon_at_end_of_statement,FUNC_4
cp_parser_decl_specifier_seq,FUNC_5
cp_parser_declarator,FUNC_6
cp_parser_declares_only_class_p,FUNC_7
cp_parser_function_specifier_opt,FUNC_8
cp_parser_require_keyword,FUNC_9
cp_parser_skip_to_end_of_statement,FUNC_10
cp_parser_storage_class_specifier_opt,FUNC_11
dk_no_check,VAR_6
do_decl_instantiation,FUNC_12
do_type_instantiation,FUNC_13
end_explicit_instantiation,FUNC_14
grokdeclarator,FUNC_15
pop_deferring_access_checks,FUNC_16
push_deferring_access_checks,FUNC_17
tf_error,VAR_7
cp_parser_explicit_instantiation,FUNC_18
parser,VAR_8
declares_class_or_enum,VAR_9
decl_specifiers,VAR_10
extension_specifier,VAR_11
type,VAR_12
declarator,VAR_13
decl,VAR_14
