CP_PARSER_DECLARATOR_NAMED,VAR_0
CP_PARSER_FLAGS_OPTIONAL,VAR_1
IDENTIFIER_NODE,VAR_2
NULL_TREE,VAR_3
RID_ENUM,VAR_4
RID_IN,VAR_5
TREE_CODE,FUNC_0
add_stmt,FUNC_1
clear_decl_specs,FUNC_2
cp_error_declarator,VAR_6
cp_finish_decl,FUNC_3
cp_lexer_consume_token,FUNC_4
cp_lexer_peek_nth_token,FUNC_5
cp_lexer_peek_token,FUNC_6
cp_parser_abort_tentative_parse,FUNC_7
cp_parser_commit_to_tentative_parse,FUNC_8
cp_parser_declarator,FUNC_9
cp_parser_expression,FUNC_10
cp_parser_parse_tentatively,FUNC_11
cp_parser_token_is_class_key,FUNC_12
cp_parser_type_specifier,FUNC_13
error,FUNC_14
error_mark_node,VAR_7
ridpointers,VAR_8
start_decl,FUNC_15
cp_parser_parse_foreach_stmt,FUNC_16
parser,VAR_9
decl_spec_declares_class_or_enum,VAR_10
is_cv_qualifier,VAR_11
type_spec,VAR_12
decl_specs,VAR_13
node,VAR_14
token,VAR_15
is_legit_foreach,VAR_16
declarator,VAR_17
nt,VAR_18
pushed_scope,VAR_19
decl,VAR_20
statement,VAR_21
