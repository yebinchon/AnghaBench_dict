CPP_CLOSE_BRACE,VAR_0
CPP_CLOSE_PAREN,VAR_1
CPP_CLOSE_SQUARE,VAR_2
CPP_COMMA,VAR_3
CPP_DEREF,VAR_4
CPP_DOT,VAR_5
CPP_GREATER,VAR_6
CPP_MINUS_MINUS,VAR_7
CPP_OBJC_STRING,VAR_8
CPP_OPEN_BRACE,VAR_9
CPP_OPEN_SQUARE,VAR_10
CPP_PLUS_PLUS,VAR_11
CPP_SEMICOLON,VAR_12
CP_ID_KIND_NONE,VAR_13
REAL_CST,VAR_14
SCOPE_REF,VAR_15
TEMPLATE_ID_EXPR,VAR_16
TREE_CODE,FUNC_0
TREE_TYPE,FUNC_1
TYPE_DECL,VAR_17
begin_stmt_expr,FUNC_2
boolean_false_node,VAR_18
boolean_true_node,VAR_19
build_x_va_arg,FUNC_3
c_dialect_objc,FUNC_4
check_for_out_of_scope_variable,FUNC_5
cp_lexer_consume_token,FUNC_6
cp_lexer_next_token_is,FUNC_7
cp_lexer_peek_token,FUNC_8
cp_objc_property_reference_prefix,FUNC_9
cp_parser_allow_gnu_extensions_p,FUNC_10
cp_parser_assignment_expression,FUNC_11
cp_parser_block_literal_expr,FUNC_12
cp_parser_builtin_offsetof,FUNC_13
cp_parser_compound_statement,FUNC_14
cp_parser_error,FUNC_15
cp_parser_expression,FUNC_16
cp_parser_id_expression,FUNC_17
cp_parser_lookup_name,FUNC_18
cp_parser_non_integral_constant_expression,FUNC_19
cp_parser_objc_expression,FUNC_20
cp_parser_objc_reference_expression,FUNC_21
cp_parser_require,FUNC_22
cp_parser_skip_to_end_of_statement,FUNC_23
cp_parser_string_literal,FUNC_24
cp_parser_type_id,FUNC_25
error,FUNC_26
error_mark_node,VAR_20
finish_fname,FUNC_27
finish_id_expression,FUNC_28
finish_parenthesized_expr,FUNC_29
finish_stmt_expr,FUNC_30
finish_this_expr,FUNC_31
flag_blocks,VAR_21
local_variable_p,FUNC_32
none_type,VAR_22
null_node,VAR_23
objc_lookup_ivar,FUNC_33
pedantic,VAR_24
pedwarn,FUNC_34
cp_parser_primary_expression,FUNC_35
parser,VAR_25
address_p,VAR_26
cast_p,VAR_27
template_arg_p,VAR_28
idk,VAR_29
token,VAR_30
expr,VAR_31
next_token,VAR_32
expr,VAR_33
saved_greater_than_is_operator_p,VAR_34
expression,VAR_35
type,VAR_36
id_expression,VAR_37
decl,VAR_38
error_msg,VAR_39
template_p,VAR_40
done,VAR_41
ambiguous_decls,VAR_42
