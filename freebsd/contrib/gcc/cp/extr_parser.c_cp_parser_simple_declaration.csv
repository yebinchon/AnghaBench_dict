CPP_COMMA,VAR_0
CPP_OPEN_PAREN,VAR_1
CPP_SEMICOLON,VAR_2
CP_PARSER_FLAGS_OPTIONAL,VAR_3
cp_lexer_consume_token,FUNC_0
cp_lexer_next_token_is,FUNC_1
cp_lexer_next_token_is_not,FUNC_2
cp_lexer_peek_token,FUNC_3
cp_parser_commit_to_tentative_parse,FUNC_4
cp_parser_decl_specifier_seq,FUNC_5
cp_parser_declares_only_class_p,FUNC_6
cp_parser_error,FUNC_7
cp_parser_error_occurred,FUNC_8
cp_parser_init_declarator,FUNC_9
cp_parser_parse_and_diagnose_invalid_type_name,FUNC_10
cp_parser_require,FUNC_11
cp_parser_skip_to_end_of_statement,FUNC_12
cp_parser_uncommitted_to_tentative_parse_p,FUNC_13
dk_deferred,VAR_4
error,FUNC_14
error_mark_node,VAR_5
gcc_assert,FUNC_15
perform_deferred_access_checks,FUNC_16
pop_deferring_access_checks,FUNC_17
push_deferring_access_checks,FUNC_18
shadow_tag,FUNC_19
stop_deferring_access_checks,FUNC_20
cp_parser_simple_declaration,FUNC_21
parser,VAR_6
function_definition_allowed_p,VAR_7
decl_specifiers,VAR_8
declares_class_or_enum,VAR_9
saw_declarator,VAR_10
token,VAR_11
function_definition_p,VAR_12
decl,VAR_13
