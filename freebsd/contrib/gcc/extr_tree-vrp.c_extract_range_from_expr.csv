ASSERT_EXPR,VAR_0
INTEGRAL_TYPE_P,FUNC_0
SSA_NAME,VAR_1
TREE_CODE,FUNC_1
TREE_CODE_CLASS,FUNC_2
TREE_TYPE,FUNC_3
TRUTH_ANDIF_EXPR,VAR_2
TRUTH_AND_EXPR,VAR_3
TRUTH_ORIF_EXPR,VAR_4
TRUTH_OR_EXPR,VAR_5
TRUTH_XOR_EXPR,VAR_6
VR_VARYING,VAR_7
extract_range_from_assert,FUNC_4
extract_range_from_binary_expr,FUNC_5
extract_range_from_comparison,FUNC_6
extract_range_from_ssa_name,FUNC_7
extract_range_from_unary_expr,FUNC_8
is_gimple_min_invariant,FUNC_9
is_overflow_infinity,FUNC_10
set_value_range_to_nonnegative,FUNC_11
set_value_range_to_nonnull,FUNC_12
set_value_range_to_value,FUNC_13
set_value_range_to_varying,FUNC_14
tcc_binary,VAR_8
tcc_comparison,VAR_9
tcc_unary,VAR_10
vrp_expr_computes_nonnegative,FUNC_15
vrp_expr_computes_nonzero,FUNC_16
extract_range_from_expr,FUNC_17
vr,VAR_11
expr,VAR_12
code,VAR_13
sop,VAR_14
