GIT_REFERENCE_SYMBOLIC,VAR_0
branch,VAR_1
cl_assert,FUNC_0
cl_assert_equal_i,FUNC_1
cl_assert_equal_oid,FUNC_2
cl_assert_equal_s,FUNC_3
cl_git_pass,FUNC_4
commit,VAR_2
committer_email,VAR_3
committer_name,VAR_4
g_repo,VAR_5
git__strdup,FUNC_5
git_commit_create_v,FUNC_6
git_commit_lookup,FUNC_7
git_commit_message,FUNC_8
git_commit_parentcount,FUNC_9
git_object_free,FUNC_10
git_oid_fromstr,FUNC_11
git_reference_free,FUNC_12
git_reference_lookup,FUNC_13
git_reference_symbolic_create,FUNC_14
git_reference_symbolic_target,FUNC_15
git_reference_target,FUNC_16
git_reference_type,FUNC_17
git_reflog_entry_byindex,FUNC_18
git_reflog_entry_committer,FUNC_19
git_reflog_entry_message,FUNC_20
git_reflog_entrycount,FUNC_21
git_reflog_free,FUNC_22
git_reflog_read,FUNC_23
git_signature_free,FUNC_24
git_signature_new,FUNC_25
git_tree_lookup,FUNC_26
head,VAR_6
head_old,VAR_7
root_commit_message,VAR_8
root_reflog_message,VAR_9
tree_id_str,VAR_10
test_commit_write__root,FUNC_27
tree_id,VAR_11
commit_id,VAR_12
branch_oid,VAR_13
author,VAR_14
committer,VAR_15
branch_name,VAR_16
tree,VAR_17
log,VAR_18
entry,VAR_19
